# Generated by Django 5.1.4 on 2025-03-06 05:56

import api.models
import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=150)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, unique=True)),
                ('avatar', models.ImageField(blank=True, max_length=255, null=True, upload_to='avatars/')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_reviewer', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('created', models.DateField(default=datetime.date.today)),
                ('updated', models.DateField(default=datetime.date.today)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('cover_image_url', models.ImageField(blank=True, max_length=255, null=True, upload_to='project_cover_images/')),
                ('deployment_timezone', models.CharField(max_length=100)),
                ('is_ready', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.JSONField(blank=True, default=list)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='api.clientmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDeviceModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('device_id', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='api.projectmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ImpressionAnalyticsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.JSONField()),
                ('impression_count', models.JSONField()),
                ('total_impressions', models.IntegerField()),
                ('stop_rate', models.FloatField()),
                ('dwell_time', models.DurationField()),
                ('energy_avg', models.FloatField()),
                ('male_energy_avg', models.FloatField()),
                ('female_energy_avg', models.FloatField()),
                ('under_40_energy_avg', models.FloatField()),
                ('over_40_energy_avg', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('zone', models.CharField(blank=True, max_length=255, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impression_analytics', to='api.projectmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectStageModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='api.projectmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ResetPasswordTokenModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expires', models.DateTimeField(default=api.models.get_default_expiration)),
            ],
            options={
                'unique_together': {('email', 'token')},
            },
        ),
        migrations.CreateModel(
            name='SessionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('video_url', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='api.projectmodel')),
                ('project_stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='api.projectstagemodel')),
            ],
        ),
        migrations.CreateModel(
            name='SessionAnalyticsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('male_ratio', models.FloatField(blank=True, null=True)),
                ('female_ratio', models.FloatField(blank=True, null=True)),
                ('under_40_ratio', models.FloatField(blank=True, null=True)),
                ('over_40_ratio', models.FloatField(blank=True, null=True)),
                ('energy_avg', models.FloatField(blank=True, null=True)),
                ('male_energy_avg', models.FloatField(blank=True, null=True)),
                ('female_energy_avg', models.FloatField(blank=True, null=True)),
                ('under_40_energy_avg', models.FloatField(blank=True, null=True)),
                ('over_40_energy_avg', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='api.projectmodel')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='api.sessionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='QrCodeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('device_name', models.CharField(blank=True, max_length=255, null=True)),
                ('qr_code', models.CharField(max_length=255)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qr_codes', to='api.projectmodel')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qr_codes', to='api.sessionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('device_name', models.CharField(blank=True, max_length=255, null=True)),
                ('count_total', models.FloatField(blank=True, null=True)),
                ('count_male', models.FloatField(blank=True, null=True)),
                ('count_female', models.FloatField(blank=True, null=True)),
                ('count_under_40', models.FloatField(blank=True, null=True)),
                ('count_over_40', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('energy_male', models.FloatField(blank=True, null=True)),
                ('energy_female', models.FloatField(blank=True, null=True)),
                ('energy_under_40', models.FloatField(blank=True, null=True)),
                ('energy_over_40', models.FloatField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='api.projectmodel')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='api.sessionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ImpressionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latest_datetime', models.DateTimeField()),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('device_name', models.CharField(blank=True, max_length=255, null=True)),
                ('zone', models.CharField(blank=True, max_length=255, null=True)),
                ('dwell_time', models.FloatField()),
                ('energy_median', models.FloatField()),
                ('face_height_median', models.IntegerField()),
                ('biological_sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('unknown', 'Unknown')], max_length=10)),
                ('biological_age', models.CharField(max_length=100)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impressions', to='api.projectmodel')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='impressions', to='api.sessionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='CommentModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.CharField(max_length=20)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.sessionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='SummaryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('opportunity', models.CharField(blank=True, max_length=255, null=True)),
                ('challenge', models.CharField(blank=True, max_length=255, null=True)),
                ('action_step', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='api.projectmodel')),
                ('session', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='api.sessionmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='summaries', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VerificationTokenModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expires', models.DateTimeField(default=api.models.get_default_expiration)),
            ],
            options={
                'unique_together': {('email', 'token')},
            },
        ),
    ]
